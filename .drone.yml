---
kind: pipeline
name: validate

steps:
  - name: yamllint
    image: sdesbure/yamllint:latest
    commands:
      - yamllint -c ./.yamllint .

  - name: docker-compose
    image: tmaier/docker-compose:latest
    commands:
      - docker-compose config -q

---
kind: pipeline
type: docker
name: test

steps:
  - name: check config
    image: nginx:latest
    user: root
    pull: always
    volumes:
      - name: certs
        path: /etc/letsencrypt/
    commands:
      - rm -r /etc/nginx/conf.d/
      - cp -R ./nginx/conf/ /etc/nginx/conf.d/
      - nginx -t

volumes:
  - name: certs
    host:
      path: /home/coen/docker-home-services/reverse-proxy/certbot/conf/

---
kind: pipeline
type: docker
name: build

depends_on:
  - validate

  - name: publish nginx
    image: plugins/docker
    settings:
      username:
        from_secret: docker-registry-username
      password:
        from_secret: docker-registry-password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-${DRONE_REPO_NAME}-nginx
      dockerfile: nginx.dockerfile
      auto_tag: true

---
kind: pipeline
type: docker
name: upgrade

depends_on:
  - build

steps:
  - name: clean
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker image prune -f

---
kind: pipeline
name: notify webhook

trigger:
  status:
    - success
    - failure

depends_on:
  - upgrade

steps:
  - name: send
    image: plugins/webhook
    settings:
      username:
        from_secret: nodered_endpoint_username
      password:
        from_secret: nodered_endpoint_password
      urls: http://nodered.docker/drone/notify
      skip_verify: true
      content_type: application/json
      template: |
        {
          "owner": "{{ repo.owner }}",
          "repo": "{{ repo.name }}",
          "status": "{{ build.status }}",
          "buildnumber": "{{ build.number }}",
          "buildlink": "{{ build.link }}"
        }
